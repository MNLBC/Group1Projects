/*
 * File: app/view/RegisterWindow.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.view.RegisterWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.TextArea',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 501,
    itemId: 'registerWindow',
    width: 463,
    layout: 'fit',
    header: false,
    title: 'My Window',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    itemId: 'registerForm',
                    bodyPadding: 10,
                    header: false,
                    title: 'My Form',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            fieldLabel: 'User Name',
                            name: 'username',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            id: 'password',
                            itemId: '',
                            fieldLabel: 'Password',
                            name: 'password',
                            inputType: 'password',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            validator: function(value) {
                                if(Ext.getCmp('password').getValue() !== value){
                                    return "Password not match";
                                }else{
                                    return true;
                                }
                            },
                            flex: 1,
                            itemId: 'confirmpassword',
                            fieldLabel: 'Confirm Password',
                            name: 'confirmpassword',
                            inputType: 'password',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            fieldLabel: 'First Name',
                            name: 'firstname',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            fieldLabel: 'Middle Name',
                            name: 'middlename'
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            fieldLabel: 'Last Name',
                            name: 'lastname',
                            allowBlank: false
                        },
                        {
                            xtype: 'textareafield',
                            flex: 1,
                            fieldLabel: 'Address',
                            name: 'address',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            fieldLabel: 'Contact No.',
                            name: 'contactno',
                            inputType: 'tel',
                            allowBlank: false,
                            maskRe: /^[0-9]*$/
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            fieldLabel: 'Email',
                            name: 'email',
                            inputType: 'email',
                            allowBlank: false
                        },
                        {
                            xtype: 'radiogroup',
                            flex: 1,
                            width: 400,
                            fieldLabel: 'Gender',
                            items: [
                                {
                                    xtype: 'radiofield',
                                    name: 'gender',
                                    boxLabel: 'Male',
                                    inputValue: 'Male'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'gender',
                                    boxLabel: 'Female',
                                    inputValue: 'Female'
                                }
                            ]
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            id: 'registerWindowButton',
                            text: 'Register'
                        },
                        {
                            xtype: 'button',
                            id: 'cancelRegisterButton',
                            text: 'Cancel'
                        }
                    ]
                }
            ],
            listeners: {
                activate: {
                    fn: me.onWindowActivate,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onWindowActivate: function(window, eOpts) {
        Ext.getBody().mask();
    }

});