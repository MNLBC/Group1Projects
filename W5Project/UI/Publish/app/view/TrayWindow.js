/*
 * File: app/view/TrayWindow.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.view.TrayWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Number',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.field.Display'
    ],

    height: 399,
    id: 'TrayWindow',
    itemId: 'TrayWindow',
    width: 619,
    header: false,
    title: '',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'trayGrid',
                    itemId: 'trayGrid',
                    header: false,
                    title: 'My Grid Panel',
                    store: 'TrayStore',
                    viewConfig: {
                        id: 'trayGridView',
                        itemId: 'trayGrid'
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            id: 'orderName',
                            itemId: 'orderName',
                            dataIndex: 'Name',
                            text: 'Name',
                            flex: 0.8
                        },
                        {
                            xtype: 'gridcolumn',
                            id: 'orderQty',
                            itemId: 'orderQty',
                            dataIndex: 'Quantity',
                            text: 'Quantity',
                            flex: 0.5
                        },
                        {
                            xtype: 'numbercolumn',
                            id: 'orderPrice',
                            itemId: 'orderPrice',
                            dataIndex: 'Price',
                            text: 'Price',
                            flex: 0.5
                        },
                        {
                            xtype: 'numbercolumn',
                            id: 'orderTotal',
                            itemId: 'orderTotal',
                            dataIndex: 'Total',
                            text: 'Total',
                            flex: 0.5
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            id: 'removeItemBtn',
                            itemId: 'removeItemBtn',
                            text: 'Remove Item'
                        }
                    ]
                },
                {
                    xtype: 'displayfield',
                    id: 'totalItems',
                    itemId: 'totalItems',
                    width: 150,
                    fieldLabel: 'Total Number of Items in Tray',
                    value: ''
                },
                {
                    xtype: 'displayfield',
                    flex: 1,
                    id: 'totalAmount',
                    itemId: 'totalAmount',
                    fieldLabel: 'Total Amount in RMB',
                    value: ''
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            id: 'checkoutBtn',
                            itemId: 'checkoutBtn',
                            text: 'CheckOut'
                        },
                        {
                            xtype: 'button',
                            id: 'cancelCheckoutBtn',
                            itemId: 'cancelCheckoutBtn',
                            text: 'Cancel'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});