/*
 * File: app/view/TransactionDetails.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.view.TransactionDetails', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View'
    ],

    height: 250,
    itemId: 'TransactionDetails',
    width: 400,
    header: false,
    title: 'My Window',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    header: false,
                    title: 'My Grid Panel',
                    store: 'TransactionDetailsStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Id',
                            text: 'Id',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Quantity',
                            text: 'Quantity',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var prodStore = Ext.getStore('ProductStore');
                                var prodData = prodStore.findRecord('Id',value);
                                return prodData.get('Name');
                            },
                            dataIndex: 'Meal',
                            text: 'Meal',
                            flex: 1
                        }
                    ]
                }
            ],
            listeners: {
                destroy: {
                    fn: me.onTransactionDetailsDestroy,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onTransactionDetailsDestroy: function(component, eOpts) {
                var transStore = Ext.getStore('TransactionDetailsStore');
                transStore.removeAll();
    }

});