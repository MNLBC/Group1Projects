/*
 * File: app/view/Products.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.view.Products', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.Products',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    height: 559,
    itemId: 'Products',
    width: 1309,
    autoScroll: true,
    header: false,
    title: 'Products',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'ProductGrid',
                    itemId: 'ProductGrid',
                    ui: 'menubarbtn',
                    header: false,
                    title: 'My Grid Panel',
                    columnLines: false,
                    hideHeaders: true,
                    store: 'ProductStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                return '<img src="'+value+'" width="150" height="150" border="0" />';
                            },
                            dataIndex: 'Image',
                            text: 'Image',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Name',
                            text: 'Name',
                            flex: 1
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});