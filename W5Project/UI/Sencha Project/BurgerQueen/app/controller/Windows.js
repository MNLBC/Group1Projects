/*
 * File: app/controller/Windows.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.controller.Windows', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'productName',
            selector: '#ProductName'
        },
        {
            ref: 'productPrice',
            selector: '#ProductPrice'
        },
        {
            ref: 'productDescription',
            selector: '#ProductDescription'
        },
        {
            ref: 'productQuantity',
            selector: '#ProductQuantity'
        },
        {
            ref: 'productImage',
            selector: '#ProductImage'
        },
        {
            ref: 'productViewWindow',
            selector: '#ProductView'
        },
        {
            ref: 'totalItems',
            selector: '#totalItems'
        },
        {
            ref: 'trayWindow',
            selector: '#TrayWindow'
        },
        {
            ref: 'trayGrid',
            selector: '#trayGrid'
        },
        {
            ref: 'totalAmount',
            selector: '#totalAmount'
        }
    ],

    onProductViewActivate: function(window, eOpts) {
            var data = window.selectedProduct,
                img = this.getProductImage(),
                productName = this.getProductName(),
                productDescription = this.getProductDescription(),
                productPrice = this.getProductPrice();

                img.setSrc(data.Image);
                productName.setValue(data.Name);
                productDescription.setValue(data.Description);
                productPrice.setValue(data.Price);

    },

    onCancelCartButtonClick: function() {
                this.getProductViewWindow().destroy();
                Ext.getBody().unmask();
    },

    onAddCartButtonClick: function() {

        var trayStore = Ext.getStore('TrayStore'),
            productName = this.getProductName().getValue(),
            productQuantity = this.getProductQuantity().getValue(),
            productPrice = this.getProductPrice().getValue();

        var tray = {
            Name: productName,
            Quantity: productQuantity,
            Price: productPrice,
            Total: productQuantity * productPrice
        };


        trayStore.add(tray);

    },

    onCancelCheckoutBtnClick: function() {
        this.getTrayWindow().destroy();
        Ext.getBody().unmask();
    },

    onRemoveItemBtnClick: function() {
                         var trayStore = Ext.getStore('TrayStore');

                        var trayGrid = this.getTrayGrid(),
                            selectModel = trayGrid.getSelectionModel(),
                            selectedProduct = selectModel.getSelection();
        trayStore.remove(selectedProduct);

    },

    onTrayWindowShow: function(component, eOpts) {
        var trayStore = Ext.getStore('TrayStore');

        var totalItems = 0,
            totalAmount = 0;
        trayStore.findBy(function(record){
                var id = record.get('Id'),
                    total = record.get('Total');
                   totalItems += quantity;
                    totalAmount += total;

        this.getTotalItems().setValue(totalItems);
        this.getTotalAmount().setValue(totalAmount);
         });
    },

    init: function(application) {
        this.control({
            "#ProductView": {
                activate: this.onProductViewActivate
            },
            "#CancelCartButton": {
                click: this.onCancelCartButtonClick
            },
            "#AddCartButton": {
                click: this.onAddCartButtonClick
            },
            "#cancelCheckoutBtn": {
                click: this.onCancelCheckoutBtnClick
            },
            "#removeItemBtn": {
                click: this.onRemoveItemBtnClick
            },
            "#TrayWindow": {
                show: this.onTrayWindowShow
            }
        });
    }

});
