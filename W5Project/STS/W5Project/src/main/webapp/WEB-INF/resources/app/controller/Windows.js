/*
 * File: app/controller/Windows.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.controller.Windows', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'productName',
            selector: '#ProductName'
        },
        {
            ref: 'productPrice',
            selector: '#ProductPrice'
        },
        {
            ref: 'productDescription',
            selector: '#ProductDescription'
        },
        {
            ref: 'productQuantity',
            selector: '#ProductQuantity'
        },
        {
            ref: 'productImage',
            selector: '#ProductImage'
        },
        {
            ref: 'productViewWindow',
            selector: '#ProductView'
        },
        {
            ref: 'totalItems',
            selector: '#totalItems'
        },
        {
            ref: 'trayWindow',
            selector: '#TrayWindow'
        },
        {
            ref: 'trayGrid',
            selector: '#trayGrid'
        },
        {
            ref: 'totalAmount',
            selector: '#totalAmount'
        },
        {
            ref: 'productId',
            selector: '#productId'
        },
        {
            ref: 'loginForm',
            selector: '#loginForm'
        },
        {
            ref: 'registerForm',
            selector: '#registerForm'
        }
    ],

    onProductViewActivate: function(window, eOpts) {
        var data = window.selectedProduct,
            img = this.getProductImage(),
            productName = this.getProductName(),
            productDescription = this.getProductDescription(),
            productPrice = this.getProductPrice(),
            productId = this.getProductId();

        img.setSrc(data.Image);
        productName.setValue(data.Name);
        productDescription.setValue(data.Description);
        productPrice.setValue(data.Price);
        productId.setValue(data.Id);
    },

    onCancelCartButtonClick: function() {
                this.getProductViewWindow().destroy();
                Ext.getBody().unmask();
    },

    onAddCartButtonClick: function() {

        var trayStore = Ext.getStore('TrayStore'),
            productName = this.getProductName().getValue(),
            productQuantity = this.getProductQuantity().getValue(),
            productPrice = this.getProductPrice().getValue(),
            productId= this.getProductId().getValue();

        var tray = {
            Id: productId,
            Name: productName,
            Quantity: productQuantity,
            Price: productPrice,
            Total: productQuantity * productPrice
        };



            var index = trayStore.find('Id', productId);
            if(index === -1){
                trayStore.add(tray);
            }else{
                var currentQuantity = trayStore.getAt(index).data.Quantity,
                    replaceQuantity = currentQuantity + productQuantity;
                    trayStore.getAt(index).data.Quantity = replaceQuantity;
            }

    },

    onCancelCheckoutBtnClick: function() {
        this.getTrayWindow().destroy();
        Ext.getBody().unmask();
    },

    onRemoveItemBtnClick: function() {
                         var trayStore = Ext.getStore('TrayStore');

                        var trayGrid = this.getTrayGrid(),
                            selectModel = trayGrid.getSelectionModel(),
                            selectedProduct = selectModel.getSelection();
        trayStore.remove(selectedProduct);

    },

    onTrayWindowShow: function(component, eOpts) {
        var trayStore = Ext.getStore('TrayStore');

        var totalItems = 0,
            totalAmount = 0;
        trayStore.each(function(record){
            var quantity = record.get('Quantity'),
                total = record.get('Total');
            totalItems += quantity;
            totalAmount += total;
            this.getTotalItems().setValue(totalItems);
            this.getTotalAmount().setValue(totalAmount);
        });
    },

    onLoginWindowButtonClick: function() {
                        var form = this.getLoginForm(),
                            username = form.getValues().username,
                            password = form.getValues().password;

                    if(form.isValid()){
                        Ext.Ajax.request({
                             url : 'login',
                             params : {
                                 'username':username,
                                 'password':password
                             },
                             scope : this,
                             success : function(response) {
                                 close();
                             }
                        });
                    }
    },

    onRegisterButtonClick: function() {
                var form = this.getRegisterForm(),
                username = form.getValues().username,
                    password = form.getValues().password,
                    firstname = form.getValues().firstname,
                    middlename = form.getValues().middlename,
                    lastname = form.getValues().lastname,
                    address = form.getValues().address,
                    contactno = form.getValues().contactno,
                    email = form.getValues().email,
                    gender = form.getValues().gender;
                console.log(form);
                if(form.isValid()){
                     Ext.Ajax.request({
                             url : 'addUser',
                             params : {
                                 'username':username,
                                 'password':password,
                                 'firstname':firstname,
                                 'middlename':middlename,
                                 'lastname':lastname,
                                 'address':address,
                                 'contactno':contactno,
                                 'email':email,
                                 'gender':gender
                             },
                             scope : this,
                             success : function(response) {
                                 close();
                             }
                        });
                }
    },

    init: function(application) {
        this.control({
            "#ProductView": {
                activate: this.onProductViewActivate
            },
            "#CancelCartButton": {
                click: this.onCancelCartButtonClick
            },
            "#AddCartButton": {
                click: this.onAddCartButtonClick
            },
            "#cancelCheckoutBtn": {
                click: this.onCancelCheckoutBtnClick
            },
            "#removeItemBtn": {
                click: this.onRemoveItemBtnClick
            },
            "#TrayWindow": {
                show: this.onTrayWindowShow
            },
            "#loginWindowButton": {
                click: this.onLoginWindowButtonClick
            },
            "#registerButton": {
                click: this.onRegisterButtonClick
            }
        });
    }

});
