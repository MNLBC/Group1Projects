/*
 * File: app/view/UserPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Project.view.UserPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.mypanel13',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.RowNumberer',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    itemId: 'userPanelClass',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    itemId: 'userGrid',
                    title: 'Users',
                    store: 'User',
                    columns: [
                        {
                            xtype: 'rownumberer'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 150,
                            dataIndex: 'name',
                            text: 'Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'username',
                            text: 'Username'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'type',
                            text: 'Type'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'Address',
                            flex: 1
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'addUsersBtn',
                            text: 'Add Users'
                        },
                        {
                            xtype: 'button',
                            itemId: 'removeUserBtn',
                            text: 'Remove User'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});