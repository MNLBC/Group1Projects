/*
 * File: app/controller/AddUserController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Project.controller.AddUserController', {
    extend: 'Ext.app.Controller',

    views: [
        'AddUsers'
    ],

    refs: [
        {
            ref: 'nameAddUser',
            selector: '#nameAddUser'
        },
        {
            ref: 'usernameAddUser',
            selector: '#usernameAddUser'
        },
        {
            ref: 'passwordAddUser',
            selector: '#passwordAddUser'
        },
        {
            ref: 'addressAddUser',
            selector: '#addressAddUser'
        },
        {
            ref: 'type',
            selector: '#typeAddUser'
        },
        {
            ref: 'contactAddUser',
            selector: '#contactAddUser'
        },
        {
            ref: 'userGrid',
            selector: '#userGrid'
        }
    ],

    onAddUserAdminBtnClick: function(button) {
               var name = this.getNameAddUser().getValue(),
                   username = this.getUsernameAddUser().getValue(),
                   password = this.getPasswordAddUser().getValue(),
                   type = this.getType().getValue(),
                   contact = this.getContactAddUser().getValue(),
                   address = this.getAddressAddUser().getValue();

               if(Ext.isEmpty(name) || Ext.isEmpty(username) || Ext.isEmpty(password) || Ext.isEmpty(type)){
                   Ext.Msg.alert('Error', 'Some fields are empty');
                   return;
               }

                var newUser = {
                    username : username,
                    password : password,
                    name : name,
                    type : type,
                    contact: contact,
                    address: address
                };

              var store = this.getUserGrid().getStore();


                store.add(newUser);
                button.up('window').destroy();





    },

    onCancelAddUserBtnClick: function(button) {
                button.up('window').destroy();
    },

    init: function(application) {
        this.control({
            "#addUserAdminBtn": {
                click: this.onAddUserAdminBtnClick
            },
            "#cancelAddUserBtn": {
                click: this.onCancelAddUserBtnClick
            }
        });
    }

});
