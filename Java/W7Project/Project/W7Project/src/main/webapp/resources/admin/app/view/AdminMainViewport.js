/*
 * File: app/view/AdminMainViewport.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueenAdmin.view.AdminMainViewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'BurgerQueenAdmin.view.adminCommentsPanel',
        'BurgerQueenAdmin.view.adminCreateMessagePanel',
        'BurgerQueenAdmin.view.adminInquiriesPanel',
        'BurgerQueenAdmin.view.adminUserPanel',
        'BurgerQueenAdmin.view.adminProductsPanel',
        'BurgerQueenAdmin.view.AdminOrderManagementPanel',
        'Ext.panel.Panel',
        'Ext.button.Button',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Display',
        'Ext.toolbar.Fill'
    ],

    id: 'AdminMainViewport',
    itemId: 'AdminMainViewport',
    autoScroll: true,

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 0.3,
                    hidden: true,
                    id: 'adminMenu',
                    itemId: 'adminMenu',
                    header: false,
                    title: 'Menu',
                    layout: {
                        type: 'vbox',
                        align: 'stretch',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'adminUsersButton',
                            style: 'font-family:\'Abel\';\nfont-size:18px;',
                            ui: 'menubarbtn',
                            text: 'Manage Users'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'adminProductsButton',
                            style: 'font-family:\'Abel\';\nfont-size:18px;',
                            ui: 'menubarbtn',
                            text: 'Manage Products'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'adminOrdersButton',
                            style: 'font-family:\'Abel\';\nfont-size:18px;',
                            ui: 'menubarbtn',
                            text: 'Manage Orders'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'adminProductFeedbackButton',
                            style: 'font-family:\'Abel\';\nfont-size:18px;',
                            ui: 'menubarbtn',
                            text: 'Product Feedback'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'adminInquiriesButton',
                            style: 'font-family:\'Abel\';\nfont-size:18px;',
                            ui: 'menubarbtn',
                            text: 'Inquiries'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            id: 'adminCreateMessageButton',
                            style: 'font-family:\'Abel\';\nfont-size:18px;',
                            ui: 'menubarbtn',
                            text: 'Create Message'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    flex: 1,
                    id: 'adminMain',
                    itemId: 'adminMain',
                    layout: 'fit',
                    header: false,
                    title: 'Chosen Menu',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'container'
                                }
                            ]
                        },
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'showAdminMenu',
                                    itemId: 'showAdminMenu',
                                    ui: 'uibtn',
                                    text: 'Menu'
                                },
                                {
                                    xtype: 'button',
                                    id: 'showUsersWindow',
                                    itemId: 'showUsersWindow',
                                    text: 'ACTIVE USERS'
                                },
                                {
                                    xtype: 'displayfield',
                                    id: 'activeUsersCount',
                                    itemId: 'activeUsersCount',
                                    fieldLabel: '',
                                    value: '0'
                                },
                                {
                                    xtype: 'tbfill'
                                },
                                {
                                    xtype: 'button',
                                    id: 'logoutButton',
                                    itemId: 'logoutButton',
                                    text: 'Logout'
                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'admincommentspanel'
                        },
                        {
                            xtype: 'admincreatemessagepanel'
                        },
                        {
                            xtype: 'admininquiriespanel'
                        },
                        {
                            xtype: 'adminuserpanel'
                        },
                        {
                            xtype: 'adminproductspanel'
                        },
                        {
                            xtype: 'adminordermanagementpanel'
                        }
                    ]
                }
            ],
            listeners: {
                render: {
                    fn: me.onAdminMainViewportRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onAdminMainViewportRender: function(component, eOpts) {
                                                  Ext.Ajax.request({
                                                      url:'message/startAdmin',
                                                      params:{
                                                      },
                                                       scope:this,
                                                       success : function(response) {
                                                           console.log("Admin start status: " + response.responseText);
                                                      }
                                                  });

            var store = Ext.getStore('AdminCommentsStore');
            store.removeAll();
                             Ext.Ajax.request({
                                     url : 'feedback/getAllFeedbacks',
                                     params : {
                                     },
                                     scope : this,
                                     success : function(response) {
                                         var data = response.responseText;
                                         var decodedData = Ext.decode(data);
                                         Ext.each(decodedData, function(record){
                                             var adminComment = {
                                                     Id: record.id,
                                                     User: record.user.id,
                                                     Meal: record.meal.id,
                                                     Feedback: record.feedback
                                                 };
                                             store.add(adminComment);
                                         });
                                     }
                                });
    }

});