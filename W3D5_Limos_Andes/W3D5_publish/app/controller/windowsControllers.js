/*
 * File: app/controller/windowsControllers.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BookingManagementSystem.controller.windowsControllers', {
    extend: 'Ext.app.Controller',

    oLoadingMessageMask: null,

    refs: [
        {
            ref: 'firstName',
            selector: '#firstName'
        },
        {
            ref: 'lastName',
            selector: '#lastName'
        },
        {
            ref: 'userName',
            selector: '#userName'
        },
        {
            ref: 'password',
            selector: '#password'
        },
        {
            ref: 'contactNo',
            selector: '#contactNo'
        },
        {
            ref: 'email',
            selector: '#email'
        },
        {
            ref: 'address',
            selector: '#address'
        }
    ],

    onCancelButtonClick: function() {
            this.registerWindow.close();
            Ext.getBody().unmask();
    },

    onSubmitButtonClick: function() {
            this.showLoadingMessageMask();
            var form = this.registerPanel.getForm();
                if(form.isValid()){

                        var firstName = this.getFirstName().getValue();
                        var lastName = this.getLastName().getValue();
                        var userName = this.getUserName().getValue();
                        var password = this.getPassword().getValue();
                        var contactNo = this.getContactNo().getValue();
                        var email = this.getEmail().getValue();
                        var address = this.getAddress().getValue();
                        var userStore = this.userStore;
                    if(!this.isUserExist(userName)){
                               var users = {
                                    firstName:firstName,
                                    lastName: lastName,
                                    userName: userName,
                                    password:password,
                                    contactNo:contactNo,
                                    email:email,
                                    address:address
                                };
                                    userStore.add(users);
                                this.hideLoadingMessageMask();
                                this.showSuccessMessage('User has been created');
                                this.registerWindow.close();
                                Ext.getBody().unmask();
                    }
                    else{
                        this.hideLoadingMessageMask();
                        this.showErrorMessage('Username already exists!');
                    }


                }else{
                    this.hideLoadingMessageMask();
                    this.showErrorMessage('All fields must have a value');
                }
    },

    onRegisterWindowActivate: function() {

                  this.registerPanel = Ext.getCmp('registerPanel');
                  this.registerWindow = Ext.getCmp('registerWindow');
                  this.userStore = Ext.getStore('userStore');
    },

    showLoadingMessageMask: function() {
                    if (!this.oLoadingMessageMask) {
                       this.oLoadingMessageMask = new Ext.LoadMask(Ext.getBody(), {
                          msg : "Processing, please wait..."
                       });
                    }
                    this.oLoadingMessageMask.show();
    },

    hideLoadingMessageMask: function() {
                    if (this.oLoadingMessageMask) {
                       this.oLoadingMessageMask.hide();
                    }

    },

    showErrorMessage: function(message) {
                Ext.MessageBox.show({
                    title:document.title,
                    msg: message,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.MessageBox.ERROR
                });
    },

    showSuccessMessage: function(message) {
                Ext.MessageBox.show({
                    title:document.title,
                    msg: message,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.MessageBox.SUCCESS
                });
    },

    isUserExist: function(userName) {
                    var userStore = this.userStore;
                    var exist = userStore.find("userName",userName);
                    if(exist === -1){
                        return false;
                    }else{
                        return true;
                    }

    },

    init: function(application) {
        this.control({
            "#cancelButton": {
                click: this.onCancelButtonClick
            },
            "#submitButton": {
                click: this.onSubmitButtonClick
            },
            "#registerWindow": {
                activate: this.onRegisterWindowActivate
            }
        });
    }

});
