/*
 * File: resources/app/controller/AdminOrderManagement.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.controller.AdminOrderManagement', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'adminDoneBttn',
            selector: '#adminDoneBttn'
        },
        {
            ref: 'adminOrderManagementGrid',
            selector: '#adminOrderManagementGrid'
        },
        {
            ref: 'adminOrderManagementStatus',
            selector: '#adminOrderManagementStatus'
        },
        {
            ref: 'onAdminOrderManagementBttnClose',
            selector: '#onAdminOrderManagementBttnClose'
        },
        {
            ref: 'adminOrderManagementViewWindow',
            selector: '#AdminOrderManagementViewWindow'
        },
        {
            ref: 'adminOrderManagementViewGrid',
            selector: '#adminOrderManagementViewGrid'
        },
        {
            ref: 'adminOrderManagementViewGrid',
            selector: '#adminOrderManagementViewGrid'
        },
        {
            ref: 'adminOrderManagementViewWindow',
            selector: '#AdminOrderManagementViewWindow'
        },
        {
            ref: 'adminOrderManagementPanel',
            selector: '#AdminOrderManagementPanel'
        },
        {
            ref: 'adminOrderManagementPanel',
            selector: '#AdminOrderManagementPanel'
        },
        {
            ref: 'adminOrderManagementViewGrid',
            selector: '#adminOrderManagementViewGrid'
        },
        {
            ref: 'adminOrderManagementViewWindow',
            selector: '#AdminOrderManagementViewWindow'
        }
    ],

    onAdminDoneBttn: function(button, e, eOpts) {
                var store = Ext.getStore('AdminOrderManagementStore'),
                grid = this.getAdminOrderManagementGrid(),
                model = grid.getSelectionModel(),
                selectedOrder = model.getSelection()[0].data;


                if(!Ext.isEmpty(selectedOrder)){
                    var orderRecord = store.findRecord("id",selectedOrder.id);
                    orderRecord.set('status','DONE');



                    var order = {
                        id:selectedOrder.id,
                        user:{
                            id:selectedOrder.userId
                        },

                        status: 'DONE'
                    };
                        Ext.Ajax.request({
                            url:'order/updateOrder',
                            headers: { 'Content-Type': 'application/json',
                                      'Accept': 'application/json'},
                            jsonData:order,
                            scope:this,
                            success : function(response) {
                                Ext.MessageBox.alert('Success','Order Status updated!');
                            }
                       });

                }else{
                    Ext.MessageBox.alert('Error','Please select an item to update status');

                }

    },

    onAdminOrderManagementGridItemDblClick: function() {
                var orderStore = Ext.getStore('AdminOrderManagementDetailsStore');

                var orderGrid = this.getAdminOrderManagementGrid(),
                    selectModel = orderGrid.getSelectionModel(),
                    selectedOrder = selectModel.getSelection()[0].data;

                var orderDetailsWin = Ext.create('BurgerQueen.view.AdminOrderManagementViewWindow',{selectedOrder: selectedOrder});
                orderDetailsWin.show();


    },

    onOnAdminOrderManagementBttnCloseClick: function() {
        Ext.getCmp('AdminOrderManagementViewWindow').destroy()
    },

    onAdminOrderManagementViewWindowShow: function(component, eOpts) {
                   var grid = Ext.getCmp('adminOrderManagementGrid'),
                      store =  grid.getStore(),
                                model = grid.getSelectionModel(),
                                selected = model.getSelection()[0].data,
                        id = selected.id;


         Ext.Ajax.request({
                            url : 'orderItem/getAllOrderItemsByOrderId',
                            params : {
                                id:id
                            },
                            scope : this,
                            success : function(response) {
                                var orderManagementStore = Ext.getStore('AdminOrderManagementDetailsStore');
                                var data = Ext.JSON.decode(response.responseText);
                                Ext.each(data, function(record){
                                    var order = {
                                        id:record.id,
                                        meal:record.meal.name,
                                        quantity:record.quantity
                                    };
                                    orderManagementStore.add(order);
                                });
                            }
                        });
    },

    onBtnOrderManagementClick: function() {
         this.getProducts().hide();
            this.getUserProfile().hide();
            this.getAdminCommentsPanel().hide();
            this.getAdminProductsPanel().hide();
            this.getAdminTransactionsPanel().hide();
            this.getAdminUserPanel().hide();
            this.getAdminOrderManagementPanel().show();

        var store = Ext.getStore('AdminOrderManagementStore');
        store.removeAll();
                Ext.Ajax.request({
                    url : 'order/getAllOrders',
                    params : {

                    },
                    scope : this,
                    success : function(response) {
                        var data = Ext.JSON.decode(response.responseText);
                        Ext.each(data, function(record){
                            var order = {
                                id:record.id,
                                userId:record.user.id,
                                status:record.status
                            };
                            store.add(order);
                        });
                    }
                });
    },

    onBtnOrderManagementClick: function() {
         this.getProducts().hide();
            this.getUserProfile().hide();
            this.getAdminCommentsPanel().hide();
            this.getAdminProductsPanel().hide();
            this.getAdminTransactionsPanel().hide();
            this.getAdminUserPanel().hide();
            this.getAdminOrderManagementPanel().show();

        var store = Ext.getStore('AdminOrderManagementStore');

                Ext.Ajax.request({
                    url : 'order/getAllOrders',
                    params : {

                    },
                    scope : this,
                    success : function(response) {
                        var data = Ext.JSON.decode(response.responseText);
                        Ext.each(data, function(record){
                            var order = {
                                id:record.id,
                                user_id:record.user.id,
                                status:record.status
                            };
                            store.add(order);
                        });
                    }
                });
    },

    onAdminOrderManagementViewWindowShow: function(component, eOpts) {

                   var grid = Ext.getCmp('adminOrderManagementGrid'),
                      store =  grid.getStore(),
                                model = grid.getSelectionModel(),
                                selected = model.getSelection()[0].data,
                        id = selected.id;


         Ext.Ajax.request({
                            url : 'orderItem/getAllOrderItemsByOrderId',
                            params : {
                                id:id
                            },
                            scope : this,
                            success : function(response) {
                                var orderManagementStore = Ext.getStore('AdminOrderManagementDetailsStore');
                                var data = Ext.JSON.decode(response.responseText);
                                Ext.each(data, function(record){
                                    var order = {
                                        id:record.id,
                                        meal:record.meal.name,
                                        quantity:record.quantity
                                    };
                                    orderManagementStore.add(order);
                                });
                            }
                        });
    },

    init: function(application) {
        this.control({
            "#adminDoneBttn": {
                click: this.onAdminDoneBttn
            },
            "#adminOrderManagementGrid": {
                itemdblclick: this.onAdminOrderManagementGridItemDblClick
            },
            "#onAdminOrderManagementBttnClose": {
                click: this.onOnAdminOrderManagementBttnCloseClick
            },
            "#AdminOrderManagementViewWindow": {
                show: this.onAdminOrderManagementViewWindowShow,
                show: this.onAdminOrderManagementViewWindowShow
            },
            "#btnOrderManagement": {
                click: this.onBtnOrderManagementClick,
                click: this.onBtnOrderManagementClick
            }
        });
    }

});
