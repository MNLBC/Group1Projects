/*
 * File: resources/app/controller/AdminOrderManagement.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.controller.AdminOrderManagement', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'adminDoneBttn',
            selector: '#adminDoneBttn'
        },
        {
            ref: 'adminOrderManagementGrid',
            selector: '#adminOrderManagementGrid'
        },
        {
            ref: 'adminOrderManagementStatus',
            selector: '#adminOrderManagementStatus'
        },
        {
            ref: 'onAdminOrderManagementBttnClose',
            selector: '#onAdminOrderManagementBttnClose'
        },
        {
            ref: 'adminOrderManagementViewWindow',
            selector: '#AdminOrderManagementViewWindow'
        }
    ],

    onAdminDoneBttn: function(button, e, eOpts) {
                var adminOrderManagementStore = Ext.getStore('AdminOrderManagementStore'),
                adminOrderManagementGrid = this.getAdminOrderManagementGrid(),
                adminOrderManagementModel = adminOrderManagementGrid.getSelectionModel(),
                selectedProduct = adminOrderManagementModel.getSelection();

                if(!Ext.isEmpty(selectedProduct)){
                productRecord = adminOrderManagementStore.findRecord("adminOrderId", selectedProduct[0].data.adminOrderId);
                productRecord.set('adminOrderManagementStatus', 'Done');

                }else{
                    Ext.MessageBox.alert('Error','Please select an item to update status');

                }

    },

    onAdminOrderManagementPanelRender: function(component, eOpts) {
                var store = Ext.getStore('AdminOrderManagementStore');
                Ext.Ajax.request({
                    url : 'order/getAllOrders',
                    params : {

                    },
                    scope : this,
                    success : function(response) {
                    var data = Ext.JSON.decode(response.responseText);
                    Ext.each(data, function(record){
                            var order = {
                                Id:record.id,
                                Code:record.code,
                                Name:record.name,
                                Description:record.description,
                                Category:record.category,
                                Price:record.price,
                            };
                            store.add(order);
                        });
                    }
                });
    },

    onAdminOrderManagementGridItemDblClick: function() {
        alert('gumana');
                Ext.create('BurgerQueen.view.AdminOrderManagementViewWindow').show();
    },

    init: function(application) {
        this.control({
            "#adminDoneBttn": {
                click: this.onAdminDoneBttn
            },
            "#AdminOrderManagementPanel": {
                render: this.onAdminOrderManagementPanelRender
            },
            "#adminOrderManagementGrid": {
                itemdblclick: this.onAdminOrderManagementGridItemDblClick
            }
        });
    }

});
