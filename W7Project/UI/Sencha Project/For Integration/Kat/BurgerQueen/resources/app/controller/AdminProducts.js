/*
 * File: resources/app/controller/AdminProducts.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.controller.AdminProducts', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'adminProductsPanel',
            selector: '#AdminProductsPanel'
        },
        {
            ref: 'userProfile',
            selector: '#UserProfile'
        },
        {
            ref: 'adminTransactionsPanel',
            selector: '#AdminTransactionsPanel'
        },
        {
            ref: 'adminUserPanel',
            selector: '#AdminUserPanel'
        },
        {
            ref: 'adminCommentsPanel',
            selector: '#AdminCommentsPanel'
        },
        {
            ref: 'adminAddMealForm',
            selector: '#adminAddMealForm'
        },
        {
            ref: 'btnProducts',
            selector: '#btnProducts'
        },
        {
            ref: 'adminProductGridView',
            selector: '#adminProductGridView'
        },
        {
            ref: 'adminEditMealName',
            selector: '#adminEditMealName'
        },
        {
            ref: 'adminEditDescription',
            selector: '#adminEditDescription'
        },
        {
            ref: 'adminEditPrice',
            selector: '#adminEditPrice'
        },
        {
            ref: 'adminEditPoints',
            selector: '#adminEditPoints'
        },
        {
            ref: 'adminMealImg',
            selector: '#adminMealImg'
        },
        {
            ref: 'adminMealCategory',
            selector: '#adminMealCategory'
        },
        {
            ref: 'description',
            selector: '#adminAddMealDesc'
        },
        {
            ref: 'price',
            selector: '#adminAddMealPrice'
        },
        {
            ref: 'points',
            selector: '#adminAddMealPoints'
        },
        {
            ref: 'mealname',
            selector: '#adminAddMealName'
        },
        {
            ref: 'adminEditMealWindow',
            selector: '#adminEditMealWindow'
        },
        {
            ref: 'adminAddMealWindow',
            selector: '#adminAddMealWindow'
        }
    ],

    onBtnProductsClick: function() {
        this.getAdminProductsPanel().show();
            this.getUserProfile().hide();
            this.getAdminCommentsPanel().hide();
            this.getAdminTransactionsPanel().hide();
            this.getAdminUserPanel().hide();

        var store = Ext.getStore('ProductStore');
        store.removeAll();
        Ext.Ajax.request({
            url : 'meal/getAllMeals',
            params : {

            },
            scope : this,
            success : function(response) {
                var data = Ext.JSON.decode(response.responseText);
                Ext.each(data, function(record){
                    var product = {
                        Id:record.id,
                        Code:record.code,
                        Name:record.name,
                        Description:record.description,
                        Category:record.category,
                        Price:record.price,
                        Image:record.image,
                        Points:record.points
                    };
                    store.add(product);
                });
            }
        });
    },

    onAdminCreateBtnClick: function() {
        Ext.create('BurgerQueen.view.AdminAddMealWindow').show();
    },

    onAdminDeleteBtnClick: function() {
         Ext.Msg.confirm("Confirmation", "Are you sure you want to delete this meal?", function(btnText){
                            if(btnText === "yes"){
                                var adminProductsGrid = Ext.getCmp('adminProductGridView'),
                                    adminProductStore = adminProductsGrid.getStore(),
                                    selectModel = adminProductsGrid.getSelectionModel(),
                                    selectedProduct = selectModel.getSelection();

                                adminProductStore.remove(selectedProduct);
                            }
         });

    },

    onAdminEditMealBtnClick: function() {
        Ext.create('BurgerQueen.view.AdminEditMealWindow').show();

    },

    onAdminEditMealWindowActivate: function(window, eOpts) {
        var adminProductsGrid = Ext.getCmp('adminProductGridView'),
                                    adminProductStore = adminProductsGrid.getStore(),
                                    selectModel = adminProductsGrid.getSelectionModel(),
                                    selectedProduct = selectModel.getSelection()[0].data;

        this.getAdminEditMealName().setValue(selectedProduct.Name);
            this.getAdminEditDescription().setValue(selectedProduct.Description);
            this.getAdminEditPrice().setValue(selectedProduct.Price);
            this.getAdminEditPoints().setValue(selectedProduct.Points);
    },

    onAdminCancelCreateBtnClick: function() {
        this.getAdminAddMealWindow().destroy();
    },

    onAdminCancelEditBtnClick: function() {
        this.getAdminEditMealWindow().destroy();
    },

    onAdminEditBtnClick: function() {
        var adminProductsGrid = Ext.getCmp('adminProductGridView'),
            selectModel = adminProductsGrid.getSelectionModel(),
            selectedProduct = selectModel.getSelection()[0].data;

        var mealName = this.getAdminEditMealName().getValue(),
            mealDescription = this.getAdminEditDescription().getValue(),
            mealPrice = this.getAdminEditPrice().getValue(),
            mealPoints = this.getAdminEditPoints().getValue();

        var meal = selectedProduct;
            meal.Name = mealName;
            meal.Description = mealDescription;
            meal.Price = mealPrice;
            meal.Points = mealPoints;

        Ext.Ajax.request({
                            url:'meal/updateMeal',
                            headers: { 'Content-Type': 'application/json',
                             'Accept': 'application/json'},
                             jsonData:meal,
                            scope:this,
                            success : function(response) {
                                Ext.MessageBox.alert('Success','Meal has been updated!');
                                adminProductsGrid.refresh();
                            }
                        });
    },

    onAdminAddMealWindowActivate: function(window, eOpts) {

    },

    onAdminSubmitMealBtnClick: function() {
         var form = this.getAdminAddMealForm().getValues(),
             image = Ext.getCmp('adminMealImg').getValue(),
             category = form.category,
             code = form.code,
             name = form.name,
             description = form.description,
             price = form.price,
             points = form.points;

        var meal = {
            image:image,
            category:category,
            code:code,
            name:name,
            description:description,
            price:price,
            points:points
        };


                if(form.isValid()){
                    Ext.Ajax.request({
                        url : 'meal/addMeal',
        //                 params : ,
                        headers: { 'Content-Type': 'application/json',
                         'Accept': 'application/json'},
                         jsonData:meal,
                        scope : this,
                        success : function(response) {
                    var data = response.responseText;
                    if(data ==='success'){
                        Ext.MessageBox.alert('Success', 'Meal Added!');
                        this.getAdminAddMealWindow.destroy();
                    }
                        }
                });
                }
    },

    activeUserCounter: function() {

            Ext.Ajax.request({
                    url : 'getLoggedUsers',
                    params : {

                    },
                    scope : this,
                    success : function(response) {
                        var data = Ext.decode(response.responseText);
                        activeUsers = data;
                        var store = activeUserStore;
                        store.removeAll();
                       this.getActiveUsersCount().setValue(data.length);
                        Ext.each(data, function(record){
                            store.add({username:record.username});
                        });
                    }
                });
    },

    init: function(application) {
        this.control({
            "#btnProducts": {
                click: this.onBtnProductsClick
            },
            "#adminCreateBtn": {
                click: this.onAdminCreateBtnClick
            },
            "#adminDeleteBtn": {
                click: this.onAdminDeleteBtnClick
            },
            "#adminEditMealBtn": {
                click: this.onAdminEditMealBtnClick
            },
            "#adminEditMealWindow": {
                activate: this.onAdminEditMealWindowActivate
            },
            "#adminCancelCreateBtn": {
                click: this.onAdminCancelCreateBtnClick
            },
            "#adminCancelEditBtn": {
                click: this.onAdminCancelEditBtnClick
            },
            "#adminEditBtn": {
                click: this.onAdminEditBtnClick
            },
            "#adminAddMealWindow": {
                activate: this.onAdminAddMealWindowActivate
            },
            "#adminSubmitMealBtn": {
                click: this.onAdminSubmitMealBtnClick
            }
        });
    }

});
