/*
 * File: app/view/adminInquiriesPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueenAdmin.view.adminInquiriesPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.admininquiriespanel',

    requires: [
        'Ext.grid.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    height: 250,
    id: 'adminInquiriesPanel',
    itemId: 'adminInquiriesPanel',
    width: 400,
    layout: 'fit',
    header: false,
    title: 'My Panel',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'AdminInquiryGrid',
                    itemId: 'AdminInquiryGrid',
                    autoScroll: true,
                    header: false,
                    title: 'My Grid Panel',
                    store: 'AdminInquiryStore',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'container',
                                    html: '<center><div id="nav"><h1 style = \'font-family: Arial; color:#565652;\' >Inquiries</h1></div></center>',
                                    width: '100%'
                                }
                            ]
                        }
                    ],
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Id',
                            text: 'Id',
                            flex: 0.2
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'User',
                            text: 'User',
                            flex: 0.4
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Message',
                            text: 'Message',
                            flex: 1
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});