/*
 * File: resources/app/controller/AdminUser.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BurgerQueen.controller.AdminUser', {
    extend: 'Ext.app.Controller',

    mixins: {
        GlobalUtil: 'com.oocl.mnlbc.GlobalMessage'
    },

    refs: [
        {
            ref: 'adminUserPanel',
            selector: '#AdminUserPanel'
        },
        {
            ref: 'userGrid',
            selector: '#userGrid'
        },
        {
            ref: 'btnEnable',
            selector: '#btnEnable'
        },
        {
            ref: 'btnDisable',
            selector: '#btnDisable'
        },
        {
            ref: 'winUserEdit',
            selector: '#winUserEdit'
        }
    ],

    onBtnEnableClick: function() {
         var userStore = Ext.getStore('UsersStore');

                                 var usersGrid = this.getUserGrid(),
                            selectModel = usersGrid.getSelectionModel(),
                            selectedUser = selectModel.getSelection();
                            User = selectedUser[0].data;


        var user ={
            'address':User.Address,
            'contactno':User.Contact,
            'email':User.Email,
            'firstname':User.Firstname,
            'gender':User.Gender,
            'id':User.id,
            'isDisabled':0,
            'lastname':User.Lastname,
            'middlename':User.Middlename,
            'points':User.Points,
            'type':User.Type,
            'userLevel':User.Level,
            'username':User.Username
        };

               Ext.Ajax.request({
                            url:'user/updateUser',
                            headers: { 'Content-Type': 'application/json',
                             'Accept': 'application/json'},
                             jsonData:user,
                            scope:this,
                            success : function(response) {
                                Ext.MessageBox.alert('Success',User.Username + ' is now Activated');

                                userStore.removeAll();

                                 Ext.Ajax.request({
                                    url : 'user/getAllUsers',
                                    params : {

                                    },
                                    scope : this,
                                    success : function(response) {
                                        var data = Ext.decode(response.responseText);
                                        Ext.each(data, function(record){
                                            var users = {
                                                id:record.id,
                                                Username:record.username,
                                                Password:record.password,
                                                Firstname:record.firstname,
                                                Middlename:record.middlename,
                                                Lastname:record.lastname,
                                                Gender:record.gender,
                                                Email:record.email,
                                                Address:record.address,
                                                Contact:record.contactno,
                                                Disabled:record.isDisabled,
                                                Type:record.type,
                                                Level:record.userLevel,
                                                Points:record.points

                                            };
                                            userStore.add(users);
                                        });
                                    }
                                });

                            }
                        });


    },

    onBtnDisableClick: function() {

                var userStore = Ext.getStore('UsersStore');

                                 var usersGrid = this.getUserGrid(),
                            selectModel = usersGrid.getSelectionModel(),
                            selectedUser = selectModel.getSelection();
                            User = selectedUser[0].data;
        var user ={
            'address':User.Address,
            'contactno':User.Contact,
            'email':User.Email,
            'firstname':User.Firstname,
            'gender':User.Gender,
            'id':User.id,
            'isDisabled':1,
            'lastname':User.Lastname,
            'middlename':User.Middlename,
            'points':User.Points,
            'type':User.Type,
            'userLevel':User.Level,
            'username':User.Username
        };
               Ext.Ajax.request({
                            url:'user/updateUser',
                            headers: { 'Content-Type': 'application/json',
                             'Accept': 'application/json'},
                             jsonData:user,
                            scope:this,
                            success : function(response) {
                                Ext.MessageBox.alert('Success',User.Username + ' is now Blocked');
                                var userStore = Ext.getStore('UsersStore');
                                userStore.removeAll();

                    Ext.Ajax.request({
                                url : 'user/getAllUsers',
                                params : {

                                },
                                scope : this,
                                success : function(response) {
                                    var data = Ext.decode(response.responseText);
                                    Ext.each(data, function(record){
                                        var users = {
                                            id:record.id,
                                            Username:record.username,
                                            Password:record.password,
                                            Firstname:record.firstname,
                                            Middlename:record.middlename,
                                            Lastname:record.lastname,
                                            Gender:record.gender,
                                            Email:record.email,
                                            Address:record.address,
                                            Contact:record.contactno,
                                            Disabled:record.isDisabled,
                                            Type:record.type,
                                            Level:record.userLevel,
                                            Points:record.points

                                        };
                                        userStore.add(users);
                                    });
                                }
                            });

                            }
                        });

    },

    onUserGridSelectionChange: function() {
        var userStore = Ext.getStore('UsersStore');

                var usersGrid = this.getUserGrid(),
                    selectModel = usersGrid.getSelectionModel(),
                    selectedUser = selectModel.getSelection();

        if(!Ext.isEmpty(selectedUser))  {
            userDisabledValue = selectedUser[0].data.Disabled;
            if(userDisabledValue === 0){
                    this.getBtnEnable().disable();
                    this.getBtnDisable().enable();
                    Ext.getCmp('btnManage').enable();
                }else{
                    this.getBtnEnable().enable();
                    this.getBtnDisable().disable();
                    Ext.getCmp('btnManage').enable();
                }
        }else{
            Ext.getCmp('btnManage').disable();
        }

    },

    onBtnUsersClick: function() {

            this.getAdminUserPanel().show();

         var userStore = Ext.getStore('UsersStore');

        userStore.removeAll();

        Ext.Ajax.request({
                    url : 'user/getAllUsers',
                    params : {

                    },
                    scope : this,
                    success : function(response) {
                        var data = Ext.decode(response.responseText);
                        Ext.each(data, function(record){
                            var users = {
                                id:record.id,
                                Username:record.username,
                                Password:record.password,
                                Firstname:record.firstname,
                                Middlename:record.middlename,
                                Lastname:record.lastname,
                                Gender:record.gender,
                                Email:record.email,
                                Address:record.address,
                                Contact:record.contactno,
                                Disabled:record.isDisabled,
                                Type:record.type,
                                Level:record.userLevel,
                                Points:record.points

                            };
                            userStore.add(users);
                        });
                    }
                });


    },

    onBtnManageClick: function() {
            Ext.create('BurgerQueen.view.WinUserEdit').show();

                        var usersGrid = this.getUserGrid(),
                            selectModel = usersGrid.getSelectionModel(),
                            selectedUser = selectModel.getSelection(),
                            type = selectedUser[0].data.Type,
                            point = selectedUser[0].data.Points;

                        Ext.getCmp('UserManageType').setValue(type);
                        Ext.getCmp('manageUserPoints').setValue(point);
    },

    onManageUserBtnConfirmClick: function() {


                var usersGrid = this.getUserGrid(),
                    selectModel = usersGrid.getSelectionModel(),
                    selectedUser = selectModel.getSelection();
                User = selectedUser[0].data;

                var type = Ext.getCmp('UserManageType').getValue(),
                  points = Ext.getCmp('manageUserPoints').getValue();

            var user ={
                        'address':User.Address,
                        'contactno':User.Contact,
                        'email':User.Email,
                        'firstname':User.Firstname,
                        'gender':User.Gender,
                        'id':User.id,
                        'isDisabled':User.isDisabled,
                        'lastname':User.Lastname,
                        'middlename':User.Middlename,
                        'points':points,
                        'type':type,
                        'userLevel':User.Level,
                        'username':User.Username
                    };

                            Ext.Ajax.request({
                                    url:'user/updateUser',
                                    headers: { 'Content-Type': 'application/json',
                                     'Accept': 'application/json'},
                                     jsonData:user,
                                    scope:this,
                                    success : function(response) {
                                        Ext.MessageBox.alert('Success','User: '+User.Username + ' was updated!');
                                        var userStore = Ext.getStore('UsersStore');
                                        userStore.removeAll();

                            Ext.Ajax.request({
                                        url : 'user/getAllUsers',
                                        params : {

                                        },
                                        scope : this,
                                        success : function(response) {
                                            var data = Ext.decode(response.responseText);
                                            Ext.each(data, function(record){
                                                var users = {
                                                    id:record.id,
                                                    Username:record.username,
                                                    Password:record.password,
                                                    Firstname:record.firstname,
                                                    Middlename:record.middlename,
                                                    Lastname:record.lastname,
                                                    Gender:record.gender,
                                                    Email:record.email,
                                                    Address:record.address,
                                                    Contact:record.contactno,
                                                    Disabled:record.isDisabled,
                                                    Type:record.type,
                                                    Level:record.userLevel,
                                                    Points:record.points

                                                };
                                                userStore.add(users);
                                            });
                                        }
                                    });

                                    }
                                });

            this.getWinUserEdit().destroy();

    },

    init: function(application) {
        this.control({
            "#btnEnable": {
                click: this.onBtnEnableClick
            },
            "#btnDisable": {
                click: this.onBtnDisableClick
            },
            "#userGrid": {
                selectionchange: this.onUserGridSelectionChange
            },
            "#btnUsers": {
                click: this.onBtnUsersClick
            },
            "#btnManage": {
                click: this.onBtnManageClick
            },
            "#manageUserBtnConfirm": {
                click: this.onManageUserBtnConfirmClick
            }
        });
    }

});
