/*
 * File: app/view/CheckedoutBooks.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Libray.view.CheckedoutBooks', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.CheckColumn',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 397,
    width: 564,
    header: false,
    title: 'My Panel',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'container',
                    dock: 'top',
                    height: 100,
                    html: '<link href=\'http://fonts.googleapis.com/css?family=Abel\'\n	rel=\'stylesheet\' type=\'text/css\'>\n <center><div id="header"><h3 style = \'font-family: Abel;\'>Checked out Book/s</h3></div></center>\n <hr width="400">',
                    style: '#nav {\nline-height: 30px;\nbackground-color: #D4F5C9;\nheight: 460px;\nwidth: 180px;\nfloat: left;\npadding: 5px;\n}',
                    width: 100
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    height: 250,
                    width: 705,
                    header: false,
                    title: 'Checked Out Book/s',
                    store: 'BorrowedStore',
                    columns: [
                        {
                            xtype: 'checkcolumn',
                            width: 83,
                            text: ''
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 142,
                            dataIndex: 'title',
                            text: 'Title'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 206,
                            dataIndex: 'author',
                            text: 'Author'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'publisher',
                            text: 'Publisher',
                            flex: 1
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            layout: {
                                type: 'hbox',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    width: 100,
                                    text: 'Return'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});